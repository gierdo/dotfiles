[[jobs]]
name = "install tpm"
type = "git"
clone = true
dest = "{{ home_dir }}/.tmux/plugins/tpm"
repo = "https://github.com/tmux-plugins/tpm"


[[jobs]]
name = "i3status-rust: repository"
type = "git"
clone = true
dest = "{{ home_dir }}/workspace/other/i3status-rust"
repo = "https://github.com/greshake/i3status-rust.git"

[[jobs]]
name = "i3status-rust: install"
needs = ["i3status-rust: repository"]
type = "command"
chdir = "{{ home_dir }}/workspace/other/i3status-rust"
command = "cargo"
argv = ["install", "--path", ".", "--locked"]


[[jobs]]
name = "dragon: repository"
type = "git"
clone = true
dest = "{{ home_dir }}/workspace/other/dragon"
repo = "https://github.com/mwh/dragon.git"

[[jobs]]
name = "dragon: install"
needs = ["dragon: repository"]
type = "command"
chdir = "{{ home_dir }}/workspace/other/dragon"
command = "bash"
argv = [
  "-c",
  'make && make install'
]
when = "{{ not has_executable(exe='dragon') }}"


[[jobs]]
name = "rofi-wayland: repository"
type = "git"
clone = true
dest = "{{ home_dir }}/workspace/other/rofi"
repo = "https://github.com/lbonn/rofi.git"

[[jobs]]
name = "rofi-wayland: install"
needs = ["rofi-wayland: repository"]
type = "command"
chdir = "{{ home_dir }}/workspace/other/rofi"
command = "bash"
argv = [
  "-c",
  'meson setup build --prefix ${HOME}/.local && cd build && ninja install'
]
when = "{{ not has_executable(exe='rofi') }}"


[[jobs]]
name = "ueberzugpp: repository"
type = "git"
clone = true
dest = "{{ home_dir }}/workspace/other/ueberzugpp"
repo = "https://github.com/jstkdng/ueberzugpp.git"

[[jobs]]
name = "ueberzugpp: install"
needs = ["ueberzugpp: repository"]
type = "command"
chdir = "{{ home_dir }}/workspace/other/ueberzugpp"
command = "bash"
argv = [
  "-c",
  'mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_X11=OFF -DENABLE_OPENCV=OFF .. && cmake --build . && cmake --install . --prefix ${HOME}/.local'
]

[[jobs]]
type = "installergo"
name = "Install go dependencies"
packages = [
  "github.com/Gelio/go-global-update",
  "github.com/google/yamlfmt/cmd/yamlfmt",
  "github.com/jesseduffield/lazydocker",
  "gitlab.com/gitlab-org/cli/cmd/glab",
  "golang.org/x/lint/golint",
  "golang.org/x/tools/cmd/goimports",
  "golang.org/x/tools/gopls",
  "mvdan.cc/sh/v3/cmd/shfmt",
]
state = "latest"


[[jobs]]
name = "install npm dependencies"
type = "installernpm"
packages = [
  "bash-language-server",
  "@bufbuild/buf",
  "concurrently",
  "copy",
  "cross-spawn",
  "dockerfile-language-server-nodejs",
  "esparse",
  "fixjson",
  "http-signature",
  "init-package-json",
  "js-yaml",
  "libcipm",
  "libnpmpublish",
  "lstat",
  "mkdirp",
  "neovim",
  "node-gyp",
  "normalize-package-data",
  "prettier",
  "rimraf",
  "shellcheck",
  "typescript",
  "typescript-language-server",
  "vscode-languageserver",
  "which",
  "yaml-language-server",
  "yarn",
]
state = "present"


[[jobs]]
name = "install python dependencies"
type = "command"
command = "pip3"
argv = [
  "install",
  "--user",
  "--upgrade",
  "autopep8",
  "bandit",
  "black",
  "cfn-lint",
  "debugpy",
  "flake8",
  "jedi-language-server",
  "podman-compose",
  "poetry",
  "pylint",
  "pynvim",
  "pyright",
  "pytype",
  "thefuck",
]
state = "present"


[[jobs]]
name = "install rust dependencies"
type = "installercargo"
crates = [
  "atuin",
  "cargo-updater",
  "exa",
  "fd-find",
  "git-delta",
  "mise",
  "ripgrep",
  "tree-sitter-cli",
  "zoxide",
]
state = "present"


[[jobs]]
name = "install mise plugins and tools"
type = "command"
command = "bash"
needs = ["install rust dependencies"]
argv = [
  "-c",
  '''\
  cd \
  && mise install -y
  '''
]


[[jobs]]
name = "install git credential helper"
type = "command"
command = "bash"
argv = [
  "-c",
  '''\
  mkdir -p ~/workspace/other/libsecret \
  && cd ~/workspace/other/libsecret \
  && cp -r /usr/share/doc/git/contrib/credential/libsecret/* ./ \
  && make \
  && mkdir -p ~/.local/bin \
  && cp git-credential-libsecret ~/.local/bin \
  '''
]
when = "{{ not has_executable(exe='git-credential-libsecret') }}"
