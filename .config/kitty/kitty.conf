# vim:fileencoding=utf-8:ft=conf

shell tmux

term xterm-kitty

font_family      UbuntuMono Nerd Font
italic_font      auto
bold_font        auto
bold_italic_font auto

font_size        12.0

# The amount the font size is changed by (in pts) when increasing/decreasing
# the font size in a running terminal.
font_size_delta 2

# Colors
foreground       #839496
background       #002b36
selection_foreground #93a1a1
selection_background #073642

# black
color0   #073642

# patched "bright0" for better readability in front of the background
color8   #2d5b69

# red
color1   #dc322f
color9   #cb4b16

# green
color2   #859900
color10  #586e75

# yellow
color3   #b58900
color11  #657b83

# blue
color4  #268bd2
color12 #839496

# magenta
color5   #d33682
color13  #6c71c4

# cyan
color6   #2aa198
color14  #93a1a1

# white
color7   #eee8d5
color15  #fdf6e3

active_border_color #00ff00
inactive_border_color #cccccc

active_tab_foreground #000
active_tab_background #eee
inactive_tab_foreground #444
inactive_tab_background #999

cursor           #93a1a1
cursor_opacity   0.7

# The cursor shape can be one of (block, beam, underline)
cursor_shape     block

# The interval (in seconds) at which to blink the cursor. Set to zero to
# disable blinking.
cursor_blink_interval     0
cursor_stop_blinking_after 15.0

# Number of lines of history to keep in memory for scrolling back
scrollback_lines 2000

# Program with which to view scrollback in a new window. The scrollback buffer is passed as
# STDIN to this program. If you change it, make sure the program you use can
# handle ANSI escape sequences for colors and text formatting.
scrollback_pager less +G -R

# When viewing scrollback in a new window, put it in a new tab as well
scrollback_in_new_tab no

# Wheel scroll multiplier (modify the amount scrolled by the mouse wheel). Use negative
# numbers to change scroll direction.
wheel_scroll_multiplier 5.0

# The interval between successive clicks to detect double/triple clicks (in seconds)
click_interval 0.5

# Characters considered part of a word when double clicking. In addition to these characters
# any character that is marked as an alpha-numeric character in the unicode
# database will be matched.
select_by_word_characters :@-./_~?&=%+#

mouse_hide_wait 3.0

# The enabled window layouts. A comma separated list of layout names. The special value * means
# all layouts. The first listed layout will be used as the startup layout.
# For a list of available layouts, see the file layouts.py
enabled_layouts *

remember_window_size   no
initial_window_width   640
initial_window_height  400

repaint_delay    10

visual_bell_duration 0.0

enable_audio_bell no

open_url_modifiers ctrl+shift
open_url_with default

# Choose whether to use the system implementation of wcwidth() (used to
# control how many cells a character is rendered in).  If you use the system
# implementation, then kitty and any programs running in it will agree. The
# problem is that system implementations often are based on outdated unicode
# standards and get the width of many characters, such as emoji, wrong. So if
# you are using kitty with programs that have their own up-to-date wcwidth()
# implementation, set this option to no.
use_system_wcwidth yes

window_border_width 0
window_margin_width 0
window_padding_width 0

map ctrl+shift+v        paste_from_clipboard
map ctrl+shift+s        paste_from_selection
map ctrl+shift+c        copy_to_clipboard
map shift+insert        paste_from_selection

map ctrl+shift+up        scroll_line_up
map ctrl+shift+down      scroll_line_down
map ctrl+shift+k         scroll_line_up
map ctrl+shift+j         scroll_line_down
map ctrl+shift+page_up   scroll_page_up
map ctrl+shift+page_down scroll_page_down
map ctrl+shift+home      scroll_home
map ctrl+shift+end       scroll_end
map ctrl+shift+h         show_scrollback

map ctrl+plus     increase_font_size
map ctrl+minus    decrease_font_size
map ctrl+shift+backspace restore_font_size

macos_hide_titlebar no

confirm_os_window_close 0
